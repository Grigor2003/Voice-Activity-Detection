data:
  # Path to clean data
  clean: data\train-clean-100
  # Path to labels
  labels: data\8000_10_50_webrtc_labels_lite.csv
#  labels: data\8000_10_50_webrtc_labels.csv
  # Path to noises data
  noise: data\noise-16k

model:
  # The id of the model from models.py from 0 to {MODELS_COUNT - 1}
  id: 4
  # The name of the model from models.py one of {NAMES}
  name:
  # Loads the specified weights to continue training,
  # creates a new run folder for storing results
  # Clears the weights and sets create_new_model to false as soon as saved
  weights:
  # If true, initializes a new model and starts training from scratch,
  # creates a new run folder for storing results
  # If empty, continue training on last model, but in new run folder
  # Always sets create_new_model to false as soon as saved
  create_new_model: false
  # The count of saves (one save is always done at the end of the run)
  saves_count: 0
  # The directory to save train results
  directory: train_results

noise:
  # The size of the noise pool for audio augmentation
  pool: 100
  # The count of noises added on a single audio
  count: 2
  # The duration of added noises in seconds separated by f,t
  duration: [5, 10]
  # Noises SNRs to use for batch augmentation
  # SNR is signal-to-noise ratio for audio augmentation
  snr_dict:
    null: 10
    0: 20
    3: 30
    10: 40
  # The ratio of empty audios that would be added to batch
  # if value is negative then the absolute would be taken
  # Example: batch: 128, zero_rate: -10 => 128 + 10 = 138
  # Example: batch: 100, zero_rate: 1.25 => 100 + 125 = 225
  zero_rate: 0.05
  # The probability of adding white noise
  white_prob: 0.5  # TODO: nenc anel vor ashxati

train:
  # The learning rate given by power of 10
  lr: -8
  # The number of epochs to train the model in current session
  epoch: 15
  # The number of workers for data loading during training
  workers: 4
  # The size of training batch (can be not final)
  #  batch: 128
  batch: 64
  # Accumulation steps
  n_accum: 8

val:
  # The ratio of validation data taken from clean data
  ratio: 0.2
  # The number of epochs to pass before calculating the validation score
  every: 5
  # The number of workers for data loading during validation score calculation
  workers: 4
  # The size of the batch for simultaneous usage of samples during validation score calculation
  # The real size of validation batch is len(snr_list) * mini_batch
  mini_batch: 32
  # Noises SNRs to use for validation batch augmentation
  snr_list: [null, 10, 5, 0]

verbose:
  # The threshold for labeling the prediction 0 or 1
  threshold: 0.55
  # If not exists the plots of current training run will be saved in results folder
  plot: true
  # The level of detail of printing
  print: 2
  # Count of examples to save per epoch
  # 0 or bigger then 2
  n_examples: 3
