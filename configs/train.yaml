data:
  # Would be used only if generates a new model
  # Leave blank if you want random seed
  seed: 42
  # Path to clean data
  clean: ../datasets/train-clean-100(converted to 8000 sr)
  # Path to labels
  labels: ../datasets/8000_30_90_webrtc_labels.csv
#  labels: ../datasets/8000_30_90_webrtc_labels_lite.csv
  synthetic:
    dir: ../datasets/speech_commands
    zeros_crop_ratio: 0.3
    count: 0

model:
  # The id of the model from models.py from 0 to {MODELS_COUNT - 1}
  id:
  # The name of the model from models.py one of {NAMES}
#  name: DGCGD_7
  name: DGCGCGD_13_7
  # Loads the specified weights to continue training,
  # creates a new run folder for storing results
  # Clears the weights and sets create_new_model to false as soon as saved
  weights:
  # If true, initializes a new model and starts training from scratch,
  # creates a new run folder for storing results
  # If empty, continue training on last model, but in new run folder
  # Always sets create_new_model to false as soon as saved
  create_new_model:
  # The count of saves (one save is always done at the end of the run)
  # When 0 will be saved every epoch
  saves_count: 0

augmentation:
  noises:
    # The count of noises added on a single audio
    count: 2
    # The ratio of empty audios that would be added to batch
    # if value is negative then the absolute would be taken
    # Example: batch: 128, zero_rate: -10 => 128 + 10 = 138
    # Example: batch: 100, zero_rate: 1.25 => 100 + 125 = 225
    zero_arg: 0.1
    use_weights_as_counts: false
    snr&weight: # Noises SNRs to use for batch augmentation
      null: 100
      0: 10
      3: 20
      10: 20

    ambience:
      weight: 5
      dir: ../datasets/noise-16k
      epoch_pool: 500 # The size of the noise pool for audio augmentation TODO: fix description
      duration: [1, 10]     # The duration of added noises in seconds separated by f,t
      random_phase: false

    esc50:
      weight: 5
      dir: ../datasets/ecs-50
      epoch_pool: 200 # The size of the noise pool for audio augmentation TODO: fix description
      duration: [ 1, 10 ]     # The duration of added noises in seconds separated by f,t
      random_phase: false

    music:
      weight: 1
      dir: ../datasets/bg_music_fixed
      epoch_pool: 125 # The size of the noise pool for audio augmentation TODO: fix description
      duration: [1, 20]   # The duration of added noises in seconds separated by f,t
      random_phase: true
      snr&weight: # Noises SNRs to use for batch augmentation
        null: 10
        3: 50
        8: 30
        12: 10

  impulses:
    # Impulse responses
    mic_ir_dir: ../datasets/mic-irs/microphone-irs-8000
    mic_ir_prob: 0.25

train:
  # The learning rate given by power of 10
  lr: -5
  # The number of epochs to train the model in current session
  epoch: 1
  # The number of workers for data loading during training
  workers: 4
  # The size of training batch (can be not final)
#  batch: 200
  batch: 50
  # Accumulation steps
  n_accum: 4
  # Default window lenght (hop lenght would be half of window)
  win_length: 400

val:
  # The ratio of validation data taken from clean data
  ratio: 0.1
  # The number of epochs to pass before calculating the validation score
  every: 1
  # The number of workers for data loading during validation score calculation
  workers:
  # The size of the batch for simultaneous usage of samples during validation score calculation
  # The real size of validation batch is len(snr_list) * mini_batch
  mini_batch: 16
  # Noises SNRs to use for validation batch augmentation
  snr_list: [null, 10, 5, 0]

verbose:
  # The threshold for labeling the prediction 0 or 1
  threshold: 0.55
  # If not exists the plots of current training run will be saved in results folder
  plot: true
  # The level of detail of printing
  mbox: true
  val_results: true
  # Count of examples to save
  n_examples:
    _: 3
    zero: 0
    synth: 5
